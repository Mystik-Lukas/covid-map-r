summarize(total_tests = sum(tests_combined_total))
library(tidyverse)
df = read.csv('data.csv')
head(df)
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(total_tests = sum(tests_combined_total))
head(df)
df %>%
filter(df$province_state == "Indiana")
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(total_tests = sum(tests_combined_total)) %>%
rename(province_state = state)
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(total_tests = sum(tests_combined_total))
library(tidyverse)
df = read.csv('data.csv')
head(df)
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(total_tests = sum(tests_combined_total))
head(df)
df %>%
filter(df$province_state == "Indiana")
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(total_tests = sum(tests_combined_total))
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(total_tests = sum(tests_combined_total))
library(tidyverse)
df = read.csv('data.csv')
head(df)
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(total_tests = sum(tests_combined_total))
head(df)
df %>%
filter(df$province_state == "Indiana")
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = sum(tests_combined_total))
library(tidyverse)
df = read.csv('data.csv')
head(df)
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = sum(tests_combined_total))
head(df)
df %>%
filter(df$province_state == "Indiana")
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = sum(tests_combined_total))
head(df)
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = sum(tests_combined_total))
head(df)
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = sum(tests_combined_total))
head(df)
range_test_com <- range(df$tests_combined_total, na.rm = TRUE)
range_test_com
#df <- df %>%
# filter(province_state != "") %>%
#filter(!is.na(tests_combined_total)) %>%
#select(province_state, tests_combined_total) %>%
#group_by(province_state) %>%
#summarize(tests_combined_total = sum(tests_combined_total))
#head(df)
library(tidyverse)
df = read.csv('data.csv')
head(df)
range_test_com <- range(df$tests_combined_total, na.rm = TRUE)
range_test_com
#df <- df %>%
# filter(province_state != "") %>%
#filter(!is.na(tests_combined_total)) %>%
#select(province_state, tests_combined_total) %>%
#group_by(province_state) %>%
#summarize(tests_combined_total = sum(tests_combined_total))
#head(df)
df %>%
filter(df$province_state == "Indiana")
range_test_com <- range(df$tests_combined_total)
range_test_com
#df <- df %>%
# filter(province_state != "") %>%
#filter(!is.na(tests_combined_total)) %>%
#select(province_state, tests_combined_total) %>%
#group_by(province_state) %>%
#summarize(tests_combined_total = sum(tests_combined_total))
#head(df)
range_test_com <- range(df$tests_combined_total, na.rm = TRUE)
range_test_com
#df <- df %>%
# filter(province_state != "") %>%
#filter(!is.na(tests_combined_total)) %>%
#select(province_state, tests_combined_total) %>%
#group_by(province_state) %>%
#summarize(tests_combined_total = sum(tests_combined_total))
#head(df)
duplicated(df$tests_combined_total)
#df <- df %>%
# filter(province_state != "") %>%
#filter(!is.na(tests_combined_total)) %>%
#select(province_state, tests_combined_total) %>%
#group_by(province_state) %>%
#summarize(tests_combined_total = sum(tests_combined_total))
#head(df)
library(tidyverse)
df = read.csv('data.csv')
head(df)
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = sum(tests_combined_total))
head(df)
df %>%
filter(df$province_state == "Indiana")
# install and load required packages
install.packages("ggplot2")
library(ggplot2)
install.packages("sf")
# install and load required packages
install.packages("ggplot2")
library(ggplot2)
install.packages("sf")
library(sf)
install.packages("dplyr")
library(dplyr)
install.packages("RColorBrewer")
library(RColorBrewer)
# load the data
df = read.csv('data.csv')
#remove empty state and remove rows with NA values
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = sum(tests_combined_total))
# load the shapefile
states_sf <- read_sf("https://raw.githubusercontent.com/jasonong/List-of-US-States/main/states.geojson")
# install and load required packages
library(ggplot2)
library(sf)
library(dplyr)
library(RColorBrewer)
# load the data
df = read.csv('data.csv')
#remove empty state and remove rows with NA values
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = sum(tests_combined_total))
# load the shapefile
states_sf <- read_sf("https://raw.githubusercontent.com/jasonong/List-of-US-States/main/states.geojson")
library(tidyverse)
library(RColorBrewer)
df = read.csv('data.csv')
head(df)
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = sum(tests_combined_total))
head(df)
df %>%
filter(df$province_state == "Indiana")
library(tidyverse)
library(RColorBrewer)
df = read.csv('data.csv')
head(df)
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = max(tests_combined_total))
head(df)
df %>%
filter(df$province_state == "Indiana")
df
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = max(tests_combined_total)) %>%
filter(tests_combined_total == 0)
head(df)
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = max(tests_combined_total)) %>%
filter(tests_combined_total != 0)
head(df)
library(tidyverse)
library(RColorBrewer)
df = read.csv('data.csv')
head(df)
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = max(tests_combined_total)) %>%
filter(tests_combined_total != 0)
head(df)
df
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = max(tests_combined_total)) %>%
filter(tests_combined_total != 0) # remove no data states, grey them out later
df
# load the map data
states_sf <- map_data("state")
# join the data
df_map <- left_join(states_sf, df, by = c("region" = "province_state"))
# create a palette
p <- brewer.pal(n = 9, name = "YlOrRd")
# create a map
ggplot(data = df_map) +
geom_sf(aes(fill = tests_combined_total), color = "black") +
scale_fill_gradient(low = "white", high = "red",na.value = "gray99", guide = "colorbar",
labels = scales::comma) +
theme_void()
ggplot(data = df_map) +
geom_polygon(aes(x = long, y = lat, group = group, fill = tests_combined_total)) +
scale_fill_gradient(low = "white", high = "red",na.value = "gray99", guide = "colorbar",
labels = scales::comma) +
theme_void()
# load the map data
states_sf <- map_data("state")
# join the data
df_map <- left_join(states_sf, df, by = c("region" = "province_state"))
# create a palette
p <- brewer.pal(n = 9, name = "YlOrRd")
# create a map
ggplot(data = df_map) +
geom_polygon(aes(x = long, y = lat, group = group, fill = tests_combined_total)) +
scale_fill_gradient(low = "white", high = "red",na.value = "gray99", guide = "colorbar",
labels = scales::comma) +
theme_void()
#change the tests_combined_total to numeric type
df$tests_combined_total <- as.numeric(as.character(df$tests_combined_total))
# load the map data
states_sf <- map_data("state")
# join the data and lower case
df_map <- left_join(states_sf, df, by = c("region" = "province_state")) %>%
mutate(province_state=tolower(province_state)) %>%
mutate(region=tolower(region))
library(tidyverse)
library(RColorBrewer)
df = read.csv('data.csv')
head(df)
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = max(tests_combined_total)) %>%
filter(tests_combined_total != 0) # remove no data states, grey them out later
df
#change the tests_combined_total to numeric type
df$tests_combined_total <- as.numeric(as.character(df$tests_combined_total))
# load the map data
states_sf <- map_data("state")
# join the data and lower case
df_map <- left_join(states_sf, df, by = c("region" = "province_state")) %>%
mutate(province_state=tolower(province_state)) %>%
mutate(region=tolower(region))
# install and load required packages
install.packages("ggplot2")
library(ggplot2)
install.packages("dplyr")
library(dplyr)
install.packages("RColorBrewer")
library(RColorBrewer)
# load the data
df = read.csv('data.csv')
# remove empty state and remove rows with NA values
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = sum(tests_combined_total))
#change the tests_combined_total to numeric type
df$tests_combined_total <- as.numeric(as.character(df$tests_combined_total))
# load the map data
states_sf <- map_data("state")
# join the data and lower case
df_map <- left_join(states_sf, df, by = c("region" = "province_state")) %>%
mutate(province_state=tolower(province_state)) %>%
mutate(region=tolower(region))
#change the tests_combined_total to numeric type
df$tests_combined_total <- as.numeric(as.character(df$tests_combined_total))
# load the map data
states_sf <- map_data("state")
# join the data and lower case
df_map <- left_join(states_sf, df, by = c("region" = "province_state")) %>%
mutate(province_state=tolower(province_state)) %>%
mutate(region=tolower(region))
#change the tests_combined_total to numeric type
df$tests_combined_total <- as.numeric(as.character(df$tests_combined_total))
# load the map data
states_sf <- map_data("state")
df_map <- left_join(states_sf, df, by = c("region" = "province_state")) %>%
rename(province_state = region) %>%
mutate(province_state = tolower(province_state))
# create a palette
p <- brewer.pal(n = 9, name = "YlOrRd")
# create a map
ggplot(data = df_map) +
geom_polygon(aes(x = long, y = lat, group = group, fill = tests_combined_total)) +
scale_fill_gradient(low = "white", high = "red",na.value = "gray99", guide = "colorbar",
labels = scales::comma) +
theme_void()
rename(df, "state" = "province_state")
df
df <- rename(df, "state" = "province_state")
df
df <- rename(df, "state" = "province_state")
library(tidyverse)
library(RColorBrewer)
df = read.csv('data.csv')
head(df)
df <- df %>%
filter(province_state != "") %>%
filter(!is.na(tests_combined_total)) %>%
select(province_state, tests_combined_total) %>%
group_by(province_state) %>%
summarize(tests_combined_total = max(tests_combined_total)) %>%
filter(tests_combined_total != 0) # remove no data states, grey them out later
df
df <- rename(df, "state" = "province_state")
df <- rename(df, "total_tests" = "tests_combined_total")
df
library(usmap)
install.packages("usmap")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "purple") +
scale_fill_continuous(
low = "white", high = "red", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "right")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "purple") +
scale_fill_continuous(
low = "white", high = "purple", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "right")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "red") +
scale_fill_continuous(
low = "white", high = "purple", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "right")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "black") +
scale_fill_continuous(
low = "white", high = "purple", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "right")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "white") +
scale_fill_continuous(
low = "white", high = "purple", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "right")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "grey") +
scale_fill_continuous(
low = "white", high = "purple", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "right")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "purple") +
scale_fill_continuous(
low = "white", high = "purple", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "right")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "#f7076b") +
scale_fill_continuous(
low = "white", high = "#f7076b", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "right")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "#f7076b") +
scale_fill_continuous(
low = "white", high = "#f7076b", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "bottom")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "#f7076b") +
scale_fill_continuous(
low = "white", high = "#f7076b", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "top")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "#f7076b") +
scale_fill_continuous(
low = "white", high = "#f7076b", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "left")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "#f7076b") +
scale_fill_continuous(
low = "purple", high = "#f7076b", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "left")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "#f7076b") +
scale_fill_continuous(
low = "blue", high = "#f7076b", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "left")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "purple") +
scale_fill_continuous(
low = "blue", high = "purple", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "left")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "black") +
scale_fill_continuous(
low = "blue", high = "purple", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "left")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "blue") +
scale_fill_continuous(
low = "blue", high = "purple", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "left")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "purple") +
scale_fill_continuous(
low = "blue", high = "purple", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "left")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "#46e8fa") +
scale_fill_continuous(
low = "blue", high = "#46e8fa", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "left")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "#46e8fa") +
scale_fill_continuous(
low = "purple", high = "#46e8fa", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "left")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "#46e8fa") +
scale_fill_continuous(
low = "whitr", high = "#46e8fa", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "left")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "#46e8fa") +
scale_fill_continuous(
low = "white", high = "#46e8fa", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "left")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "grey") +
scale_fill_continuous(
low = "white", high = "#46e8fa", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "left")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "grey") +
scale_fill_continuous(
low = "white", high = "#46e8fa", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "bottom")
library(usmap)
plot_usmap(data = df, values = "total_tests", color = "grey") +
scale_fill_continuous(
low = "white", high = "#46e8fa", name = "Covid Tests by State (2020)", label = scales::comma
) + theme(legend.position = "left")
